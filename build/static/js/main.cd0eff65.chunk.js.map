{"version":3,"sources":["constants.js","DisplayForm.js","showerrors.js","register.js","App.js","serviceWorker.js","index.js"],"names":["validLogin","DisplayForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loggedIn","failedip","email","ip","failcount","locked","login","bind","assertThisInitialized","passwordField","React","createRef","emailField","e","_this2","preventDefault","pwd","current","value","usr","console","log","setState","password","fetch","then","res","json","result","_this3","react_default","a","createElement","className","placeholder","ref","type","onClick","Component","ShowErrors","list","map","item","RegisterForm","success","message","nameField","confirmField","register","name","confirmPass","validation","validate","confirm","length","showerrors_ShowErrors","obj","errors","startsWithCaps","match","hasLowercase","hasDigits","isLongEnough","hasSymbols","emailHasAt","push","App","class","id","checked","for","src_DisplayForm","register_RegisterForm","Boolean","window","location","hostname","ReactDOM","render","src_App","action","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd0eff65.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const validLogin = {email: 'imjonathan.r@gmail.com',password: 'reacttest'}","import React from 'react';\r\nimport {validLogin} from './constants';\r\n\r\nclass DisplayForm extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props)\r\n\tthis.state = {loggedIn: false,failedip:{email:null,ip:null,failcount:0},locked: false}\r\n\tthis.login = this.login.bind(this)\r\n\tthis.passwordField = React.createRef();\r\n\tthis.emailField = React.createRef();\r\n\t}\r\n\r\n\tlogin(e){\r\n\t\te.preventDefault();\r\n\t\tconst {failcount} = this.state.failedip\r\n\t\tlet pwd = this.passwordField.current.value\r\n\t\tlet usr = this.emailField.current.value\r\n\t\tif(pwd == validLogin.password && usr == validLogin.email){\r\n\t\t\tconsole.log('loggedin successfully')\r\n\t\t\tthis.setState({loggedIn: true})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvar email = this.emailField.current.value\r\n\t\t\tvar password = this.passwordField.current.value\r\n\r\n\t\t\t//mark as first failed attempt\r\n\t\t\t//using jsonip to get public ip so we dont have to use public-ip library in node, which will take much longer\r\n\t\t\tfetch('https://jsonip.com/').then((res)=>res.json()).then((result)=>{\r\n\t\t\t\tconsole.log(result.ip)\r\n\t\t\t\tif(failcount > 1){\r\n\t\t\t\t\tthis.setState({locked: true})\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({failedip:{email:email,ip:result.ip,failcount: failcount + 1}})\r\n\t\t\t\t//setTimeout(()=>{this.setState({locked: false})},5000)\r\n\t\t\t\t//we set the timer above to 5 seconds or how long we want\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log('login failed for : email '+email + 'and password '+ password + ' count = '+this.state.failedip.failcount)\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.loggedIn){\r\n\t\t\treturn (<p>Welcome, user</p>)\r\n\t}\r\n\tif(this.state.locked){\r\n\t\treturn (<p>You have been locked out, please wait 5 mins</p>)\r\n\t}\r\n\r\n\telse{return(\r\n\t<form className='login-form'>\r\n\t\t<input className='textfield' placeholder='your email' ref={this.emailField} />\r\n\t\t<input className='textfield' ref={this.passwordField} type='password' placeholder='your passwprd'/>\r\n\t\t<button className='submit' onClick={e=>this.login(e)}>Login</button>\r\n\t</form>\r\n\t)}\r\n\t}\r\n}\r\n\r\nexport default DisplayForm","import React from 'react';\r\n\r\nexport default class ShowErrors extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props)\r\n\t}\r\n\trender(){\r\n\treturn(\r\n\t<ul className='error-list'>\r\n\t{this.props.list.map((item)=> <li className='error-item'>{item}</li>)}\r\n\t</ul>\r\n\t)\r\n\t}\r\n}","import React from 'react';\r\nimport ShowErrors from './showerrors';\r\n\r\nexport default class RegisterForm extends React.Component{\r\n\tconstructor(props){\r\n\tsuper(props);\r\n\tthis.state = {success: false,message: null}\r\n\tthis.nameField = React.createRef()\r\n\tthis.emailField = React.createRef()\r\n\tthis.passwordField = React.createRef()\r\n\tthis.confirmField = React.createRef()\r\n\tthis.register = this.register.bind(this)\r\n\t}\r\n\r\n\tregister(e){\r\n\t\te.preventDefault()\r\n\t\tlet name = this.nameField.current.value\r\n\t\tlet email = this.emailField.current.value\r\n\t\tlet password = this.passwordField.current.value\r\n\t\tlet confirmPass = this.confirmField.current.value\r\n\t\tvar validation = this.validate({name: name,email:email,password:password,confirm:confirmPass})\r\n\t\tif(validation.length > 0){\r\n\t\t\tthis.setState({message: <ShowErrors list={validation}/>})\r\n\t\t}\r\n\t\telse this.setState({success: true})\r\n\r\n\t}\r\n\r\n\tvalidate(obj){\r\n\t\tvar pwd = obj.password\r\n\t\tvar errors = []\r\n\t\t\tlet startsWithCaps = pwd.match(/^[A-Z]{2,}/) //starts with 2 capital letters\r\n\t\t\tlet hasLowercase = pwd.match(/[a-z]/g) //contains lowercase letters\r\n\t\t\tlet hasDigits = pwd.match(/[0-9]{3,}/) //contains 3 numbers or digits\r\n\t\t\tlet isLongEnough = pwd.length >= 16\r\n\t\t\tlet hasSymbols = pwd.match(/[^\\w]{2,}/) //check for at least 2 symbols (special chars)\r\n\t\t\tlet emailHasAt = obj.email.match('@')\r\n\t\t\tif(startsWithCaps === null) errors.push(\"Password should start with two capital letters\")\r\n\t\t\tif(hasLowercase === null) errors.push(\"Password should have at least one lowercase character\")\r\n\t\t\tif(hasDigits === null) errors.push(\"Password should have at least 3 numbers\")\r\n\t\t\tif(hasSymbols === null) errors.push(\"Password should have at least 2 special characters\")\r\n\t\t\tif(!isLongEnough) errors.push(\"Password be at least 16 characters long\")\r\n\t\t\tif(emailHasAt === null) errors.push(\"Email does not contain @\")\r\n\t\t\tif(obj.password != obj.confirm) errors.push(\"Passwords do not match\")\r\n\t\t\tif(obj.name == '') errors.push(\"Name field is empty\")\r\n\r\n\t\treturn errors\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.success) return(<p>Thanks for registering.</p>)\r\n\r\n\t\telse{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"register\">\r\n\t\t\t\t<div className=\"error-box\">\r\n\t\t\t\t<p>{this.state.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className='login-form'>\r\n\t\t\t\t\t<input className='textfield' placeholder='Full name' ref={this.nameField} />\r\n\t\t\t\t\t<input className='textfield' placeholder='Email' ref={this.emailField} />\r\n\t\t\t\t\t<input className='textfield' ref={this.passwordField} type='password' placeholder='your password'/>\r\n\t\t\t\t\t<input className='textfield' ref={this.confirmField} type='password' placeholder='retype password'/>\r\n\t\t\t\t\t<button className='submit' onClick={e=>this.register(e)}>Register</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\nimport './App.css';\nimport DisplayForm from './DisplayForm';\nimport RegisterForm from './register';\n\nfunction App() {\n\t\t\n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n      \t<div className=\"tabs\">\n      \t<div class=\"tab\">\n\t       <input type=\"radio\" id=\"tab-1\" name=\"tab-group-1\" checked />\n\t       <label for=\"tab-1\">Login</label>\n\t       \n\t       <div class=\"content\">\n\t           <DisplayForm />\n\t       </div> \n\t   </div>\n    \n\t   <div class=\"tab\">\n\t       <input type=\"radio\" id=\"tab-2\" name=\"tab-group-1\" />\n\t       <label for=\"tab-2\">Register</label>\n\t       \n\t       <div class=\"content\">\n\t      \t<RegisterForm />\n\t       </div> \n\t   </div>\n\t   </div>\n    \n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App action='register'/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}